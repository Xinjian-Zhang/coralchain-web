export default {
  title: 'CoralChain',
  subtitle: 'Visuaalne plokiahela √µpetust√∂√∂riistade kogum',
  menu: {
    home: 'üè†Avaleht',
    getStarted: 'üöÄAlusta',
    learnBasics: 'üìö√ïpi p√µhit√µdesid',
    tryItOut: 'üß™Proovi j√§rele',
    aboutUs: 'üëÄMeist',
  },
  footer: '¬© 2025 CoralChain. Xinjian Zhang ‚Äì Tartu √úlikool',
  hello: 'Tere!',
  thisIs: 'See on...',
  school: 'Tartu √úlikool, Eesti',
  thanksToSupervisor: 'Eriline t√§nu minu juhendajale, <strong class="text-lg font-bold">dr Mubashar Iqbal</strong>ile!',
  copy: 'Kopeeri',
  copied: 'Kopeeritud!',

  tryText: {
    lab1: 'Eeldused',
    lab2: 'Paigaldamine ja k√§ivitamine',
    lab3: 'Dockeri juurutamine (soovitatav)',
    t1: 'Saate k√§ivitada <strong>CoralChaini</strong> oma masinas kohapeal.',
    t2: 'See on loodud <strong class="font-bold">Ruby</strong> ja <strong class="font-bold">Sinatra</strong> abil.',
    t3: 'Allpool on samm-sammuline juhend alustamiseks.',
    t4: 'Installige <strong>Ruby</strong> (soovitatav versioon: &ge; 3.2).',
    t5: 'Installige Ruby',
    t6: 'Installige <strong>Bundler</strong>, et hallata s√µltuvusi <strong>Gem</strong> (Ruby paketihalduri) kaudu.',
    t7: 'Installige Bundler',
    t8: 'Klooni hoidla',
    t9: 'Sisestage projektikataloog',
    t10: 'Installige s√µltuvused',
    t11: 'K√§ivita rakendus',
    t12: 'Kui olete alustanud, avage',
    t13: 'CoralChaini kiireks kogemiseks on soovitatav kasutada Dockerit selle kasutamiseks konteinerkeskkonnas.',
    t14: 'Ehitage ja k√§ivitage konteiner',
    t15: 'Samamoodi avage'
  },
  basics: {
    blockchain: {
      title: "Plokiahel",
      summary: "Plokiahel on hajutatud pearaamat, mis koosneb kr√ºptograafiliselt √ºhendatud plokkidest.",
      details: `Plokiahel on detsentraliseeritud ja muutmatu pearaamat, mis koosneb kr√ºptograafiliselt seotud plokkidest.
Iga plokk sisaldab:
‚Ä¢ Kinnitatud tehinguid
‚Ä¢ Ajatemplit
‚Ä¢ Eelmise ploki r√§si

See tagab andmete terviklikkuse, j√§lgitavuse ja takistab v√µltsimist.

P√µhim√µisted:
- SHA-256
- Merkle puud
- Hajutatud konsensus`
    },
    node: {
      title: "S√µlm",
      summary: "S√µlm on plokiahela v√µrgus osaleja, kes salvestab andmeid ja rakendab reegleid.",
      details: `S√µlmed osalevad plokiahelas, tehes j√§rgmist:
‚Ä¢ Tehingute valideerimine ja edastamine
‚Ä¢ Pearaamatu andmete salvestamine

S√µlmet√º√ºbid:
‚Ä¢ T√§iss√µlm: Salvestab kogu plokiahela ja valideerib plokke
‚Ä¢ Kergs√µlm: Salvestab osalised andmed, v√§iksem arvutuskoormus
‚Ä¢ Valideerija/Kaevandaja: Pakub uusi plokke ja valideerib neid konsensuse kaudu`
    },
    consensus: {
      title: "Konsensus",
      summary: "Konsensusmehhanismid v√µimaldavad hajutatud s√µlmedel n√µustuda plokiahela olekus.",
      details: `Konsensus tagab, et k√µik s√µlmed on n√µus plokiahela praeguse olekuga ilma keskse autoriteedita.

Konsensuse t√º√ºbid:
‚Ä¢ T√∂√∂ t√µend (PoW): Kaevandajad lahendavad matemaatilisi √ºlesandeid (nt Bitcoin)
‚Ä¢ Panuse t√µend (PoS): Valideerijad valitakse panustatud varade p√µhjal (nt Ethereum 2.0)
‚Ä¢ Autoriteedi t√µend (PoA): Usaldusv√§√§rsed valideerijad hoiavad v√µrku t√∂√∂s (nt ettev√µtete plokiahelad)

Igal mehhanismil on kompromissid energia, detsentraliseerituse ja kiiruse osas.`
    },
    gossip: {
      title: "Gossip-protokoll",
      summary: "Gossip-protokollid levitavad andmeid juhuslikult s√µlmede vahel, nagu kuulujutud v√µrgus.",
      details: `Gossip-protokollis:
‚Ä¢ Iga s√µlm jagab uuendusi juhuslike kaaslastega
‚Ä¢ Teave levib eksponentsiaalselt

See mudel:
‚Ä¢ On vastupidav ja detsentraliseeritud
‚Ä¢ V√µimaldab kiiret plokkide/tehingute levikut
‚Ä¢ V√§hendab √ºhte t√µrke punkti`
    },
    byzantine: {
      title: "B√ºtsantsi viga",
      summary: "B√ºtsantsi viga t√§hendab, et s√µlm k√§itub juhuslikult v√µi pahatahtlikult.",
      details: `B√ºtsantsi vead tekivad, kui s√µlmed:
‚Ä¢ Saadavad vastuolulist v√µi vale teavet
‚Ä¢ P√º√ºavad konsensust h√§irida

BFT-algoritmid (nt PBFT, HotStuff, Tendermint) suudavad taluda kuni 1/3 rikkuvatest s√µlmedest ja tagada v√µrgu korrektsuse.`
    },
    forks: {
      title: "Hargnemised (Forks)",
      summary: "Fork ehk hargnemine t√§histab plokiahela ajaloo v√µi protokolli lahknemist.",
      details: `Hargnemised tekivad:
‚Ä¢ Vastandlike plokiettepanekute t√µttu
‚Ä¢ Protokolli uuenduste t√µttu

T√º√ºbid:
‚Ä¢ Pehme hargnemine (Soft Fork): √úhilduvad uuendused
‚Ä¢ Karm hargnemine (Hard Fork): √úhildumatu, loob uue ahela

Konsensusreeglid valivad tavaliselt k√µige pikema kehtiva ahela.`
    },
    smartContracts: {
      title: "Tark leping",
      summary: "Tark leping on programm, mis t√§idab end plokiahelas automaatselt.",
      details: `Targad lepingud on muutumatud ja l√§bipaistvad skriptid, mis t√§idavad tingimusi, nagu:
‚Ä¢ Maksekorraldused
‚Ä¢ Tokenite v√§ljastamine
‚Ä¢ DAO haldamine

Programmeerimiskeeled: Solidity (Ethereum), Rust (Solana), Move (Aptos/Sui)`
    },
    hash: {
      title: "R√§si (Hash)",
      summary: "R√§sifunktsioonid teisendavad sisendi fikseeritud suurusega v√§ljundiks turvaliselt.",
      details: `Kr√ºptograafiline r√§sifunktsioon:
‚Ä¢ Kaardistab andmed ‚Üí fikseeritud suurusega r√§si
‚Ä¢ On √ºhepoolne, kokkulangevusi v√§listav

Kasutus:
‚Ä¢ Ploki terviklikkuse tagamine
‚Ä¢ Merkle juured
‚Ä¢ Digiallkirjad

Tuntud algoritmid: SHA-256, Keccak256`
    }
  },
  common: {
    expand: "Kl√µpsa, et avada ‚ñº",
    collapse: "Kl√µpsa, et sulgeda ‚ñ≤"
  },
  notFound: 'Lehte ei leitud',
  pageNotExist: 'Otsitavat lehte ei eksisteeri v√µi see on teisaldatud.',
  backToHome: 'Tagasi avalehele',
  startText: {
    lab1: '1. Blokeeri toimingud ja kinnitamine',
    lab2: '2. Mitme s√µlme interaktsioon ja s√ºnkroonimine',
    lab3: '3. Konsensus ja v√µrgu simulatsioonn',
    lab4: 'Projekti plakat',
    t1: 'Looge ja kinnitage r√§si lingiga plokke. Andmete muutmine r√ºnnakute simuleerimiseks ja kinnitustulemuste vaatamiseks.',
    t2: 'Simuleerige s√µltumatuid s√µlmi (A, B, X), k√§ivitage kahvlid, sisestage v√µltsahelad ja lahendage pikima kehtiva ahela reegli abil.',
    t3: 'V√µrdle PoW, PoA ja PoS j√µudlust v√µrdlusalustega. Simuleeri kuulujuttude levikut ja ekspordi katsetulemused.',
    d1: 'Plokkide loomine kahe konsensusmeetodi abil',
    d2: 'Plokiahela terviklikkuse kontrollimine',
    d3: 'Plokkide rikkumine ja verifitseerimine',
    d4: 'Plokkide loomine ja rikkumine Node A-s',
    d5: 'Ploki genereerimine Node B-s, millele j√§rgneb pikima ahela s√ºnkroonimine Node A-ga',
    d6: 'B√ºtsantsi s√µlme X v√µltsa ahela loomine ja s√µlme B saastamine',
    d7: 'Hargnemise simulatsioon s√µlmes A ja s√µlmes B',
    d8: 'Konsensuse j√µudlus: iga konsensusmeetodi (PoW, PoA, PoS) kohta loodud 50 plokki',
    d9: 'PoW, PoA ja PoS v√µrdlus: 50 plokki iga mehhanismi kohta koos loomise aja anal√º√ºsiga',
    d10: 'Kaevandamisaeg PoW puhul: 10 plokki iga raskusastme kohta (1‚Äì5 eesnullide taset)',
    d11: 'Kuulujuttude leviku simulatsioon: ausate ja v√µltsitud s√µnumite levik 7 s√µlme vahel',
    nb: '* M√§rkus: k√µik videod on vaiksed demonstratsiooni salvestised.',
    android: 'Android-seadmed ei toeta manustatud eelvaateid. Palun kl√µpsake alloleval lingil, et avada.',
    poster: 'Ava PDF-plakat'
  }
}